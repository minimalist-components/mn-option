{"version":3,"sources":["scripts/mn-option.class.js"],"names":["evaluated","value","isVariable","startsWith","isNaN","eval","e","isObject","obj","_typeof","Array","isArray","MnOption","self","setInputAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","default","input","setAttribute","_this","_ret","_classCallCheck","this","hasAttribute","evaluatedValue","JSON","stringify","console","error","inputAttributes","label","document","createElement","map","removeAttribute","appendChild","addEventListener","blur","type","isNatural","classList","contains","customInput","className","add","vector","createElementNS","innerHTML","background","placeholderText","textContent","checked","lastChecked","querySelector","remove","_possibleConstructorReturn","form","closest","options","querySelectorAll","from","item","filter","isRadio","isSingleOption","length","isBoolean","Boolean","setById","option","id","_id","idEqual","forEach","stringifiedValue","replace","HTMLElement","window","customElements","define"],"mappings":"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","file":"mn-option.js","sourcesContent":["class MnOption extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    const element = this\n\n    if (!this.hasAttribute('value')) {\n      const name = this.hasAttribute('name')\n        ? `[name=\"${this.getAttribute('name')}\"]`\n        : ''\n\n      console.error(`missing value in mn-option${name}`)\n    } else {\n      const evaluatedValue = evaluated(this.getAttribute('value'))\n\n      if (isObject(evaluatedValue)) {\n        this.setAttribute('value', JSON.stringify(evaluatedValue))\n      }\n    }\n\n    const inputAttributes = [\n      {\n        name: 'type',\n        values: ['radio', 'checkbox'],\n        default: 'checkbox',\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'autofocus',\n      },\n      {\n        name: 'checked',\n      },\n      {\n        name: 'disabled',\n      },\n      {\n        name: 'value',\n      },\n      {\n        name: 'id',\n      },\n    ]\n\n    const label = document.createElement('label')\n\n    // input element\n    const input = document.createElement('input')\n    inputAttributes.map(setInputAttribute)\n    this.removeAttribute('id')\n    label.appendChild(input)\n\n    this.addEventListener('mouseleave', () => {\n      input.blur()\n    })\n\n    // custom input\n    const type = this.getAttribute('type')\n    const isNatural = this.classList.contains('natural')\n    if (type && !isNatural) {\n      const customInput = document.createElement('div')\n      customInput.className = 'input'\n      customInput.classList.add(type)\n      label.appendChild(customInput)\n\n      if (type === 'checkbox') {\n        const vector = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n        vector.setAttribute('width', '16px')\n        vector.setAttribute('height', '16px')\n        vector.innerHTML = `<g\n          stroke=\"none\"\n          stroke-width=\"1\"\n          fill=\"none\"\n          fill-rule=\"evenodd\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\">\n            <g\n              transform=\"translate(2.000000, 3.000000)\"\n              stroke-width=\"2\"\n              stroke=\"#000000\">\n                <polyline\n                  points=\"12.3825 0.581533333 3.653 10.3935333 0.273722222 6.7386\"></polyline>\n            </g>\n        </g>`\n        customInput.appendChild(vector)\n      }\n    } else {\n      const background = document.createElement('div')\n      background.classList.add('background')\n      label.appendChild(background)\n    }\n\n    // placeholder text\n    const placeholderText = document.createElement('span')\n    placeholderText.classList.add('text')\n    placeholderText.textContent = this.getAttribute('placeholder') || this.getAttribute('value')\n    label.appendChild(placeholderText)\n\n    if (input.checked) {\n      this.classList.add('checked')\n    }\n\n    input.addEventListener('change', () => {\n      if (input.getAttribute('type') === 'radio') {\n        const name = input.getAttribute('name')\n        const lastChecked = document.querySelector(`mn-option.checked[name=\"${name}\"]`)\n        if (lastChecked) {\n          lastChecked.classList.remove('checked')\n        }\n      }\n\n      input.checked\n        ? this.classList.add('checked')\n        : this.classList.remove('checked')\n\n      // element.value = input.value\n      // console.log('change')\n    })\n\n    element.appendChild(label)\n\n    return self\n\n    function setInputAttribute(attribute) {\n      const isDefaultAttribute = attribute.hasOwnProperty('default')\n      const attributeValue = element.getAttribute(attribute.name)\n\n      if (isDefaultAttribute) {\n        const isValidValue = attribute.hasOwnProperty('values')\n          && attribute.values.indexOf(attributeValue) >= 0\n\n        const value = isValidValue\n          ? attributeValue\n          : attribute.default\n\n        input.setAttribute(attribute.name, value)\n      } else if (attributeValue) {\n        input.setAttribute(attribute.name, attributeValue)\n      }\n    }\n  }\n\n  get value() {\n    const form = this.closest('form') || document\n    const name = this.getAttribute('name')\n      ? `[name=\"${this.getAttribute('name')}\"]`\n      : ':not([name])'\n    const options = form.querySelectorAll(`mn-option${name}`)\n    const type = this.getAttribute('type')\n\n    const value = Array\n      .from(options)\n      .map(item => item.querySelector('input'))\n      .filter(item => item.checked)\n      .map(item => evaluated(item.value))\n\n    const isRadio = type === 'radio'\n    const isSingleOption = options.length === 1\n    const isBoolean = typeof evaluated(options[0].getAttribute('value')) === 'boolean'\n\n    return isRadio || (isSingleOption && isBoolean)\n      ? isSingleOption && isBoolean\n        ? Boolean(value[0])\n        : value[0]\n      : value\n  }\n\n  set value(value) {\n    const form = this.closest('form') || document\n    const name = this.getAttribute('name')\n      ? `[name=\"${this.getAttribute('name')}\"]`\n      : ':not([name])'\n    const options = form.querySelectorAll(`mn-option${name}`)\n    const type = options[0].getAttribute('type')\n    const values = Array.isArray(value)\n      ? value\n      : [value]\n\n    Array\n      .from(options)\n      .forEach(option => {\n        option.checked = false\n      })\n\n    if (type === 'radio') {\n      const value = values[0]\n      const stringifiedValue = typeof value === 'string'\n        ? value.replace(/\"/g, '\\\\\"')\n        : JSON.stringify(value).replace(/\"/g, '\\\\\"')\n\n      // console.log('try', `mn-option${name}[value=\"${stringifiedValue}\"]`)\n      const option = form.querySelector(`mn-option${name}[value=\"${stringifiedValue}\"]`)\n      if (option) {\n        option.checked = true\n      } else {\n        setById(value)\n      }\n    } else {\n      values\n        .forEach(value => {\n          const stringifiedValue = typeof value === 'string'\n            ? value.replace(/\"/g, '\\\\\"')\n            : JSON.stringify(value).replace(/\"/g, '\\\\\"')\n\n          const option = form.querySelector(`mn-option${name}[value=\"${stringifiedValue}\"]`)\n          if (option) {\n            option.checked = true\n          } else {\n            setById(value)\n            console.error(`${JSON.stringify(value)} is a invalid value to mn-option${name}`)\n          }\n        })\n    }\n\n    function setById(value) {\n      value = evaluated(value)\n      try {\n        let options = form.querySelectorAll(`mn-option${name}`)\n        // let mnOption =\n\n        options = Array\n          .from(options)\n          .filter(option => {\n            const evaluatedValue = evaluated(option.getAttribute('value'))\n            const id = value.id || value._id\n            const idEqual = id\n              && (\n                id === evaluatedValue.id\n                || id === evaluatedValue._id\n              )\n\n            return idEqual\n          })\n\n        if (options.length) {\n          options[0].classList.add('checked')\n          options[0].querySelector('input').checked = true\n        } else {\n          console.error(`${JSON.stringify(value)} is a invalid value to mn-option${name}`)\n        }\n\n      } catch (e) {\n        console.error(`${JSON.stringify(value)} is a invalid value to mn-option${name}`)\n      }\n      // console.error(`${JSON.stringify(value)} is a invalid value to mn-option${name}`)\n    }\n  }\n\n  get checked() {\n    return this.hasAttribute('checked')\n  }\n\n  set checked(checked) {\n    if (checked) {\n      this.setAttribute('checked', 'true')\n      this.classList.add('checked')\n    } else {\n      this.removeAttribute('checked')\n      this.classList.remove('checked')\n    }\n\n    this.querySelector('input').checked = checked\n  }\n}\n\nfunction evaluated(value) {\n  try {\n    const isVariable = !value.startsWith('[')\n      && !value.startsWith('{')\n      && !value.startsWith('\\'')\n      && !value.startsWith('\"')\n      && !value.startsWith('`')\n      && value !== 'true'\n      && value !== 'false'\n      && isNaN(value)\n\n    return isVariable\n        ? eval(`'${value}'`) // convert to string\n        : eval(`(${value})`) // evaluate\n  } catch (e) {\n    return value\n  }\n}\n\nfunction isObject(obj) {\n  return obj !== null\n    && typeof obj === 'object'\n    && !Array.isArray(obj)\n}\n\nwindow.customElements.define('mn-option', MnOption)\nwindow.MnOption = MnOption\n"]}