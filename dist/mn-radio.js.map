{"version":3,"sources":["scripts/mn-option.class.js"],"names":["MnOption","self","setInputAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","input","setAttribute","_this","_ret","_classCallCheck","this","inputAttributes","label","document","createElement","map","removeAttribute","appendChild","addEventListener","blur","radio","className","type","classList","add","_possibleConstructorReturn","HTMLElement","window","customElements","define"],"mappings":"yyBAAMA,UAAAA,SAAAA,cACJ,QAAAA,UAAYC,MAkDV,QAASC,mBAAkBC,WACzB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,OAAMC,aAAab,UAAUM,KAAMI,WAC1BP,iBACTS,MAAMC,aAAab,UAAUM,KAAMH,gBAhEvB,GAAAW,OAAAC,IAAAC,iBAAAC,KAAApB,UAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,SAAAA,WAAAA,OAAAA,eAAAA,WAAAA,KAAAA,KAAaA,MACb,IAAMM,SAAAA,MAEAc,kBAEFZ,KAAM,SAINA,KAAM,SAGNA,KAAM,cAGNA,KAAM,YAGNA,KAAM,aAGNA,KAAM,UAGNA,KAAM,OAIJa,MAAQC,SAASC,cAAc,SAG/BT,MAAQQ,SAASC,cAAc,QACrCH,iBAAgBI,IAAIvB,mBACpBe,MAAKS,gBAAgB,MACrBJ,MAAMK,YAAYZ,OAElBE,MAAKW,iBAAiB,aAAc,WAClCb,MAAMc,QAGR,IAAMC,OAAQP,SAASC,cAAc,MACrCM,OAAMC,UAAY,OAClB,IAAMC,MAAOf,MAAKT,aAAa,OAK/B,OAJAsB,OAAMG,UAAUC,IAAIF,MACpBV,MAAMK,YAAYG,OAClBvB,QAAQoB,YAAYL,OAEpBJ,KAAOjB,KAAPkC,2BAAAlB,MAAAC,wDAjDmBkB,YAuEvBC,QAAOC,eAAeC,OAAO,YAAavC,UAC1CqC,OAAOrC,SAAWA","file":"mn-radio.js","sourcesContent":["class MnOption extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    const element = this\n\n    const inputAttributes = [\n      {\n        name: 'type',\n        // default: 'radio',\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'autofocus',\n      },\n      {\n        name: 'checked',\n      },\n      {\n        name: 'disabled',\n      },\n      {\n        name: 'value',\n      },\n      {\n        name: 'id',\n      },\n    ]\n\n    const label = document.createElement('label')\n\n    // input element\n    const input = document.createElement('input')\n    inputAttributes.map(setInputAttribute)\n    this.removeAttribute('id')\n    label.appendChild(input)\n\n    this.addEventListener('mouseleave', () => {\n      input.blur()\n    })\n\n    const radio = document.createElement('div')\n    radio.className = 'input'\n    const type = this.getAttribute('type')\n    radio.classList.add(type)\n    label.appendChild(radio)\n    element.appendChild(label)\n\n    return self\n\n    function setInputAttribute(attribute) {\n      let isDefaultAttribute = attribute.hasOwnProperty('default')\n      let attributeValue = element.getAttribute(attribute.name)\n\n      if (isDefaultAttribute) {\n        let isValidValue = attribute.hasOwnProperty('values')\n          && attribute.values.indexOf(attributeValue) >= 0\n\n        let value = isValidValue\n          ? attributeValue\n          : attribute.default\n\n        input.setAttribute(attribute.name, value)\n      } else if (attributeValue) {\n        input.setAttribute(attribute.name, attributeValue)\n      }\n    }\n  }\n}\n\nwindow.customElements.define('mn-option', MnOption)\nwindow.MnOption = MnOption\n"]}