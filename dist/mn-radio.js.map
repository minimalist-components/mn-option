{"version":3,"sources":["scripts/mn-radio.class.js"],"names":["MnRadio","self","setInputAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","input","setAttribute","_this","_ret","_classCallCheck","this","inputAttributes","labelText","label","document","createElement","text","textContent","appendChild","map","radio","className","_possibleConstructorReturn","HTMLElement","window","customElements","define"],"mappings":"yyBAAMA,SAAAA,SAAAA,cACJ,QAAAA,SAAYC,MAiDV,QAASC,mBAAkBC,WACzB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,OAAMC,aAAab,UAAUM,KAAMI,WAC1BP,iBACTS,MAAMC,aAAab,UAAUM,KAAMH,gBA/DvB,GAAAW,OAAAC,IAAAC,iBAAAC,KAAApB,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,MACb,IAAIM,SAAAA,MAEAc,kBAEAZ,KAAM,OACNK,QAAS,UAGTL,KAAM,SAGNA,KAAM,cAGNA,KAAM,YAGNA,KAAM,aAGNA,KAAM,UAKNa,UAAYf,QAAQC,aAAa,SACjCe,MAAQC,SAASC,cAAc,SAC/BC,KAAOF,SAASC,cAAc,OAC9BH,aACFI,KAAKC,YAAcpB,QAAQC,aAAa,YACjCc,UADY,YAEfA,WAENC,MAAMK,YAAYF,KAGlB,IAAIX,OAAQS,SAASC,cAAc,QACnCJ,iBAAgBQ,IAAI3B,mBACpBqB,MAAMK,YAAYb,MAElB,IAAIe,OAAQN,SAASC,cAAc,MAKnC,OAJAK,OAAMC,UAAY,QAClBR,MAAMK,YAAYE,OAClBvB,QAAQqB,YAAYL,OAEpBL,KAAOjB,KAAP+B,2BAAAf,MAAAC,sDAhDkBe,YAsEtBC,QAAOC,eAAeC,OAAO,WAAYpC,SACzCkC,OAAOlC,QAAUA","file":"mn-radio.js","sourcesContent":["class MnRadio extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    let element = this\n\n    let inputAttributes = [\n      {\n        name: 'type',\n        default: 'radio',\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'autofocus',\n      },\n      {\n        name: 'checked',\n      },\n      {\n        name: 'disabled',\n      },\n      {\n        name: 'value',\n      },\n    ]\n\n    // label element\n    let labelText = element.getAttribute('label')\n    let label = document.createElement('label')\n    let text = document.createElement('span')\n    if (labelText) {\n      text.textContent = element.getAttribute('disabled')\n        ? `${labelText} disabled`\n        : labelText\n    }\n    label.appendChild(text)\n\n    // input element\n    let input = document.createElement('input')\n    inputAttributes.map(setInputAttribute)\n    label.appendChild(input)\n\n    let radio = document.createElement('div')\n    radio.className = 'radio'\n    label.appendChild(radio)\n    element.appendChild(label)\n\n    return self\n\n    function setInputAttribute(attribute) {\n      let isDefaultAttribute = attribute.hasOwnProperty('default')\n      let attributeValue = element.getAttribute(attribute.name)\n\n      if (isDefaultAttribute) {\n        let isValidValue = attribute.hasOwnProperty('values')\n          && attribute.values.indexOf(attributeValue) >= 0\n\n        let value = isValidValue\n          ? attributeValue\n          : attribute.default\n\n        input.setAttribute(attribute.name, value)\n      } else if (attributeValue) {\n        input.setAttribute(attribute.name, attributeValue)\n      }\n    }\n  }\n}\n\nwindow.customElements.define('mn-radio', MnRadio)\nwindow.MnRadio = MnRadio\n"]}