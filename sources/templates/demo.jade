html
  meta(name='viewport' content='width=device-width, user-scalable=no')
  link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.min.css')

  block styles
    link(rel='stylesheet' href='docs/vendor.css')
    link(rel='stylesheet' href='dist/mn-option.css')

  style.
    .demo {
      margin-bottom: 5em;
    }

    .demo .mn-layout-container > div {
      margin: 0 auto;
    }

    @media (max-width: 599px) {
      mn-option {text-align: center}
    }

    @media (min-width: 600px) {
      .demo .mn-layout-container > div {
        width: 80%;
      }
    }

    h3 {
      margin-top: 7em;
      padding-bottom: .5em;
      color: #868e96;
    }

body
  h2 mn-option
  include github-corner

  .demo.mn-layout-fullscreen.mn-layout-centered
    .mn-layout-container
      h3.align-center natural checkbox type
      .mn-layout-column.mn-layout-sm-row
        mn-option.natural.flex#test(placeholder='Ned' name='list' checked type='checkbox')
        mn-option.natural.flex(placeholder='Daenerys' name='list' checked type='checkbox')
        mn-option.natural.flex(placeholder='Robert' name='list' type='checkbox')
        mn-option.natural.flex(placeholder='Cersei' name='list' type='checkbox')

      h3.align-center natural radio type
      .mn-layout-column.mn-layout-sm-row
        mn-option.natural.flex#test(placeholder='Ned' name='list2' type='radio')
        mn-option.natural.flex(placeholder='Daenerys' name='list2' checked type='radio')
        mn-option.natural.flex(placeholder='Robert' name='list2' type='radio')
        mn-option.natural.flex(placeholder='Cersei' name='list2' type='radio')

      h3.align-center radio type
      .mn-layout-column.mn-layout-sm-row
        mn-option.flex#test(placeholder='Stark' name='house' checked type='radio')
        mn-option.flex(placeholder='Targaryen' name='house' type='radio')
        mn-option.flex(placeholder='Baratheon' name='house' type='radio')
        mn-option.flex(placeholder='Lannister' name='house' type='radio')

      h3.align-center checkbox type
      .mn-layout-column.mn-layout-sm-row
        mn-option.flex#test(placeholder='Ned' name='list' type='checkbox')
        mn-option.flex(placeholder='Daenerys' name='list' type='checkbox')
        mn-option.flex(placeholder='Robert' name='list' type='checkbox')
        mn-option.flex(placeholder='Cersei' name='list' checked type='checkbox')

  .docs.mn-layout-container
    mn-code.sh.
      npm install --save mn-option

    p And bundle dependencies and main files in <strong>dist/</strong> with your preferred tool.

    h3 usage
    p in your html, you can use the tag <strong class="tag">mn-option</strong> e.g.
    mn-code.html.
      <!-- checkboxes -->
      <mn-option placeholder="Stark" name="gender"></mn-option>
      <mn-option placeholder="Lannister" name="gender"></mn-option>
      <mn-option placeholder="Targaryen" name="gender"></mn-option>

    p To define as radio, use the attribute <strong>type</strong>
    mn-code.html.
      <!-- radios -->
      <mn-option placeholder="Female" name="gender" type="radio"></mn-option>
      <mn-option placeholder="Male" name="gender" type="radio"></mn-option>

    h3 custom attributes

    p - placeholder - custom attribute, to define the text visible
    p - type (only checkbox and radio)

    h3 Natural checkbox or radio
    p Is just a css class, to define a minimal design. Useful in some cases. E.g.

    mn-code.html.
      <!-- checkboxes, but if you want radio, just implement the type attribute with radio value -->
      <mn-option class="natural" placeholder="Stark" name="gender"></mn-option>
      <mn-option class="natural" placeholder="Lannister" name="gender"></mn-option>
      <mn-option class="natural" placeholder="Targaryen" name="gender"></mn-option>

    p The following attributes from input type radio are supported in this component, <em>autofocus</em>, <em>checked</em>, <em>disabled</em>, <em>name</em>, <em>required</em>, <em>value</em> and <em>id</em>.

    p Too works with a separted <strong>label</strong> with an attribute <strong>for</strong>.



  block scripts
    script(src='docs/vendor.js')
    script(src='dist/mn-option.js')

